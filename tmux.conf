## General
# always load the reset file first
#source-file ~/.tmux/tmux.reset.conf

# improve colors
# see https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be
set  -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Input modes
setw -g mode-keys vi
setw -g status-key emacs

# settings
set  -g clock-mode-style 12
set  -g renumber-windows on
set escape-time 0

## Keybindings
unbind C-b
set -g prefix 'C-\'
bind-key 'C-\' send-prefix
# escape C-\ C-n binding for nvim esc to normal mode in terminal
bind-key C-n send-keys C-\ C-n
bind -n M-F set-option status

### enter copy-mode with any vim-scrolling [up] key
bind C-y copy-mode
bind C-u copy-mode
bind C-b copy-mode
# also match the nvim default <C-\><C-n>, since \ is the prefix
bind C-n copy-mode

### Windows
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-9 previous-window
bind -n M-0 next-window
bind -n M-[ previous-window
bind -n M-] next-window
bind -n M-( swap-window -t -1
bind -n M-) swap-window -t +1
bind x kill-pane
bind -n M-t new-window 
bind c new-window -c "#{pane_current_path}"

### Panes
bind s split-window -c "#{pane_current_path}"
bind C-s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"
bind V split-window -h -c "#{pane_current_path}" -p 40
bind C-V split-window -h -c "#{pane_current_path}" -p 40
bind 9 command-prompt -p "send pane to:"  "join-pane -h -t '%%'"
bind 0 break-pane

#bind-key -n M-H join-pane -h -b -t 2 
bind-key -n M-J split-window -c "#{pane_current_path}"
#bind-key -n M-K join-pane -b -t +1
bind-key -n M-L split-window -h -c "#{pane_current_path}"
bind-key -r C-h select-pane -L
bind-key -r C-j select-pane -D
bind-key -r C-k select-pane -U
bind-key -r C-l select-pane -R
bind-key -r H resize-pane -L 7
bind-key -r J resize-pane -D 3
bind-key -r K resize-pane -U 3
bind-key -r L resize-pane -R 7
bind-key -n M-o resize-pane -Z # make pane full screen
bind-key -n M-O last-pane \; resize-pane -Z # switch to the other pane

## Status Bar
# http://man.cx/strftime(3) for list of possible variables
set  -g status-position top
set  -g status-left ""
set  -g status-right "#(cat ~/.thyme-tmux)#[bg=black]#[fg=red]#(battery 20)#[fg=brightblack]#(iswifi 0)[#(hostname)] [%Y-%m-%d #(daychar)] [%I:%M] #{prefix_highlight}"
# https://devhints.io/tmux for possible window-status variables
setw -g window-status-format "[#I] #W#F "
setw -g window-status-current-format "[#I] #W#F "

## Colors (Base16)
set  -g status-fg                   brightblue      # solarized base00 brightyellow; base16 base04 brightblue
set  -g status-bg                   black           # solarized base03 brightblack;  base16 base00 black
set  -g pane-border-fg              brightblack     # solarized base01 brightgreen;  base16 base03 brightblack
set  -g pane-active-border-fg       brightblack     # solarized base01 brightgreen;  base16 base03 brightblack
set  -g pane-active-border-bg       default
setw -g window-status-fg            brightblue      # solarized base00 brightyellow; base16 base04 brightblue
setw -g window-status-bg            brightgreen     # solarized base02 black;        base16 base01 brightgreen
setw -g window-status-current-fg    brightwhite     # solarized base2 white;         base16 base07 brightwhite
setw -g window-status-current-bg    brightgreen     # solarized base02 black;        base16 base01 brightgreen

## Plugin Settings
set -g @prefix_highlight_fg 'brightblack'
set -g @prefix_highlight_bg 'yellow'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=brightblack,bg=yellow' # default is 'fg=default,bg=yellow'
set -g @prefix_highlight_output_suffix ' '
set -g focus-events on # to play nice with vim (vim-tmux-focus-events plugins); should be included in tmux-sensible but put it here anyway

### vim-tmux-navigator
# use this instead of plugin manager to get custom keybindings
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

## Mac-specific settings (copy/paste with reattach-to-user-namespace)
if-shell 'test "$(uname)" = "Darwin"' 'source ~/dotfiles/tmux/tmux-mac.conf'

## Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-urlview'
run '~/.tmux/plugins/tpm/tpm' # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
