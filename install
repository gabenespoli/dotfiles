#!/bin/bash

# Gabe Nespoli (gabenespoli@gmail.com)
# this script is intended to be run via curl
# i.e. don't need to have git to first clone the dotfiles repo

# Do this first {{{1
# 1. update with software update
#    via command line: sudo softwareupdate -ia --verbose
# 2. make sure xcode command line tools are installed
#    to install: xcode-select --install

# Homebrew {{{1
echo "-- Installing Homebrew packages..."
[ -z "$(which brew)" ] &&
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

brew install bash readline coreutils findutils grep gnu-sed gawk wget \
  tmux vim neovim macvim ranger git tig ctags cloc tree jq \
  reattach-to-user-namespace karabiner-elements openssh \
  pandoc pandoc-citeproc pandoc-crossref

brew cask install xquartz iterm2 spectacle google-chrome

# bash {{{1
echo "-- Adding the new bash shell to the list of allowed shells"
sudo bash -c 'echo /usr/local/bin/bash >> /etc/shells' # Prompts for password
chsh -s /usr/local/bin/bash # Change to the new shell, prompts for password

# TODO: setup terminfo with italics (should this be moved out of mac-only? #{{{1

# dotfiles (now that we have git) {{{1
echo "-- Cloning dotfiles and creating symlinks..."
DOTFILES="$HOME"/dotfiles
[ -e "$DOTFILES" ] && mv "$DOTFILES" "$DOTFILES".bak
git clone https://github.com/gabenespoli/dotfiles "$DOTFILES"
BAKDIR="$DOTFILES"/.bak
mkdir -pv "$BAKDIR"

for rc in *rc *profile tmux.conf; do
  [ -e "$HOME"/."$rc" ] && mv -v "$HOME"/."$rc" "$BAKDIR"/"$rc"
  ln -sfv "$DOTFILES"/"$rc" "$HOME"/."$rc"
done

for cfg in karabiner ranger pudb; do
  [ -e "$HOME"/.config/"$cfg" ] && mv -v "$HOME"/.config/"$cfg" "$BAKDIR"/"$cfg"
  ln -sfv "$DOTFILES"/config/"$cfg" "$HOME"/.config
done

# git {{{1
if [ ! -e ~/.git-prompt.sh ]; then
  curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh -o ~/.git-prompt.sh
fi

git config --global user.email "gabenespoli@gmail.com"
git config --global user.name "Gabe Nespoli"

# tmux {{{1
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
tmux source-file ~/.tmux.conf

# vim {{{1
echo "-- Linking vim files and directories..."
[ -e "$HOME"/.vim ] && mv -v "$HOME"/.vim "$BAKDIR"/vim
mkdir -pv "$HOME"/.vim/autoload
curl -fLo "$HOME"/.vim/autoload/plug.vim \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

for folder in ftdetect ftplugin spell syntax; do
  ln -sfv "$DOTFILES"/vim/"$folder" "$HOME"/.vim/"$folder"
done

# nvim
mkdir -pv "$HOME"/.config/nvim/autoload
ln -sf "$DOTFILES"/vimrc "$HOME"/.config/nvim/init.vim
ln -sf "$HOME"/.vim/autoload/plug.vim "$HOME"/.config/nvim/autoload/

nvim +PlugInstall +qall

# python {{{1
echo "-- Setting up python and virtual environments..."
brew install pyenv pyenv-virtualenv
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# system version (latest python 3)
pyenv install 3.7.1
pyenv global 3.7.1
pip install --upgrade pip
pip install neovim

# data science version (anaconda)
pyenv install miniconda3-4.3.30
pyenv shell miniconda3-4.3.30
conda install -y scipy numpy pandas matplotlib seaborn bokeh ipython jupyter \
  scikit-learn tensorflow keras pudb databricks-cli
pyenv shell --unset
mkdir -pv "$HOME"/.ipython/profile_default
ln -sfv "$DOTFILES"/ipython/profile_default/ipython_config.py \
  "$HOME"/.ipython/profile_default/ipython_config.py

# set macOS defaults {{{1
[ -e "$DOTFILES"/macos ] && . "$DOTFILES"/macos

# Spectacle.app
echo "Setting shortcuts for Spectacle.app..."
[ -e "$HOME"/Library/Application\ Support/Spectacle/Shortcuts.json ] && \
  mv -v "$HOME"/Library/Application\ Support/Spectacle/Shortcuts.json "$DOTFILES"/bak/spectacle.json
cp -r "$DOTFILES"/init/spectacle.json "$HOME"/Library/Application\ Support/Spectacle/Shortcuts.json 2>/dev/null
