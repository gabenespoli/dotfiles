#!/bin/bash

# Gabe Nespoli (gabenespoli@gmail.com)
# this script is intended to be run via curl
# i.e. don't need to have git to first clone the dotfiles repo

# Do this first {{{1
# 1. update with software update
#    via command line: sudo softwareupdate -ia --verbose
# 2. make sure xcode command line tools are installed
#    to install: xcode-select --install
# 3. Install fonts
#    - https://github.com/IBM/plex
#    - https://github.com/tonsky/FiraCode

# Homebrew {{{1
echo "-- Installing Homebrew..."
[ -z "$(which brew)" ] &&
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "-- Installing Homebrew packages..."
brew install bash readline coreutils findutils grep gnu-sed gawk wget
brew install tmux neovim lf git ctags tree jq cloc
brew install tig bat ag ripgrep fzf
brew install reattach-to-user-namespace openssh openssl
brew install pandoc pandoc-citeproc pandoc-crossref basictex

brew cask install xquartz
brew cask install alacritty
brew cask install spectacle
brew cask install karabiner-elements

# bash {{{1
echo "-- Adding the new bash shell to the list of allowed shells"
sudo bash -c 'echo /usr/local/bin/bash >> /etc/shells' # Prompts for password
chsh -s /usr/local/bin/bash # Change to the new shell, prompts for password

# TODO: setup terminfo with italics (should this be moved out of mac-only? #{{{1

# dotfiles (now that we have git) {{{1
echo "-- Cloning dotfiles and creating symlinks..."
DOTFILES="$HOME"/dotfiles
[ -e "$DOTFILES" ] && mv "$DOTFILES" "$DOTFILES".bak
git clone https://github.com/gabenespoli/dotfiles "$DOTFILES"
BAKDIR="$DOTFILES"/.bak
mkdir -pv "$BAKDIR"

for rc in *rc *profile *cfg tmux.conf gitconfig; do
  [ -e "$HOME"/."$rc" ] && mv -v "$HOME"/."$rc" "$BAKDIR"/"$rc"
  ln -sfv "$DOTFILES"/"$rc" "$HOME"/."$rc"
done

for cfg in karabiner ranger lf pudb; do
  [ -e "$HOME"/.config/"$cfg" ] && mv -v "$HOME"/.config/"$cfg" "$BAKDIR"/"$cfg"
  ln -sfv "$DOTFILES"/config/"$cfg" "$HOME"/.config
done

mkdir -pv "$HOME"/.ipython/profile_default
ln -sfv "$DOTFILES"/ipython/profile_default/ipython_config.py \
  "$HOME"/.ipython/profile_default/ipython_config.py

# git {{{1
if [ ! -e ~/.git-completion.bash ]; then
  curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash
fi

git config --global user.email "gabenespoli@gmail.com"
git config --global user.name "Gabe Nespoli"

git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1

# tmux {{{1
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
tmux source-file ~/.tmux.conf

# vim {{{1
echo "-- Linking vim files and directories..."
[ -e "$HOME"/.vim ] && mv -v "$HOME"/.vim "$BAKDIR"/vim
mkdir -pv "$HOME"/.vim/autoload
curl -fLo "$HOME"/.vim/autoload/plug.vim \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

for folder in ftdetect ftplugin spell syntax; do
  ln -sfv "$DOTFILES"/vim/"$folder" "$HOME"/.vim/"$folder"
done

# nvim
mkdir -pv "$HOME"/.config/nvim/autoload
ln -sf "$DOTFILES"/vimrc "$HOME"/.config/nvim/init.vim
ln -sf "$HOME"/.vim/autoload/plug.vim "$HOME"/.config/nvim/autoload/

nvim +PlugInstall +qall

# Spectacle.app  {{{1
echo "Setting shortcuts for Spectacle.app..."
[ -e "$HOME"/Library/Application\ Support/Spectacle/Shortcuts.json ] && \
  mv -v "$HOME"/Library/Application\ Support/Spectacle/Shortcuts.json "$DOTFILES"/bak/spectacle.json
cp -r "$DOTFILES"/init/spectacle.json "$HOME"/Library/Application\ Support/Spectacle/Shortcuts.json 2>/dev/null

# python with conda {{{1
# https://docs.conda.io/projects/conda/en/latest/user-guide/install/macos.html
wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O ~/miniconda.sh
bash ~/miniconda.sh -b -p $HOME/miniconda
conda init
conda update -n base -c defaults conda

# base env
conda activate base
conda install -y \
  flake8 mypy pydocstyle black isort pytest \
  pandas matplotlib seaborn bokeh scikit-learn \
  ipython jupyter jupyterlab \
  python-language-server jedi \
  sphinx sphinx-rtd-theme
pip install pyspark-stubs databricks-cli

# env for neovim
conda create -y -n neovim3
conda activate neovim3
conda install -y \
  flake8 mypy pydocstyle black isort \
  python-language-server jedi
pip install neovim pynvim

conda create -y -n neovim2 python=2.7.15
conda activate neovim2
pip install neovim pynvim
