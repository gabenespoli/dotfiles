## Editing mode options
set editing-mode vi
set show-mode-in-prompt on

### prepend prompt with character indicating the editing mode
# set vi-ins-mode-string \1\e[0;33m\2+\1\e[m\2
# set vi-cmd-mode-string \1\e[0;32m\2:\1\e[m\2
# set emacs-mode-string \1\e[1;35m\2@\1\e[m\2

### change cursor shape based on editing mode
# https://stackoverflow.com/questions/7888387/the-way-to-distinguish-command-mode-and-insert-mode-in-bashs-vi-command-line-ed
set vi-ins-mode-string \1\e[6 q\2
set vi-cmd-mode-string \1\e[2 q\2
set emacs-mode-string \1\e[4 q\2

### vi settings                                         
$if mode=vi                
  set keymap vi-command
    "\C-l": clear-screen
    "o":    accept-line
  
  set keymap vi-insert
    "jk":   vi-movement-mode
    "\C-a": beginning-of-line
    "\C-b": backward-char
    "\C-d": forward-backward-delete-char
    "\C-e": end-of-line
    "\C-f": forward-char
    "\C-k": kill-line
    "\C-l": clear-screen
    "\C-n": history-search-forward
    "\C-p": history-search-backward

    "\eb": backward-word
    "\ed": kill-word
    "\ef": forward-word

$else
    "\C-n": history-search-forward
    "\C-p": history-search-backward

$endif

## Other
# scroll through history based on what is already entered at the prompt
# "\e[A": history-search-backward            # arrow up
# "\e[B": history-search-forward             # arrow down
set completion-ignore-case on
set show-all-if-ambiguous on

